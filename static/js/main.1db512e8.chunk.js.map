{"version":3,"sources":["components/MainMenu.js","layout/Header.js","layout/Footer.js","layout/MainLayout.js","pages/HomePage.js","pages/AboutPage.js","pages/InfoPage.js","pages/PromoPage.js","pages/NewsPage.js","pages/ContactPage.js","layout/AdminLayout.js","pages/AdminPage.js","pages/ErrorPage.js","serviceWorker.js","index.js"],"names":["styles","background","boxShadow","borderBottom","MainMenu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","reactstrap_es","color","expand","style","objectSpread","fill","className","Link","to","onClick","navbar","React","Component","Header","components_MainMenu","Footer","MainLayout","layout_Header","id","children","layout_Footer","HomePage","layout_MainLayout","AboutPage","InfoPage","PromoPage","NewsPage","ContactPage","AdminLayout","AdminPage","layout_AdminLayout","ErrorPage","Boolean","window","location","hostname","match","App","BrowserRouter","Switch","Route","exact","path","component","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1db512e8.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  Nav,\n  NavItem\n  } from 'reactstrap';\n\nconst styles = {};\n\nstyles.fill = {\n  background: '#23345c',\n  boxShadow: '0px 2px 11px 1px rgba(0, 0, 0, 0.31)',\n  borderBottom: 'solid 1px #98a3b7'\n};\n\nclass MainMenu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {isOpen: false};\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar color=\"custom-header\" expand=\"md\"  style={{...styles.fill}}>\n          <div className=\"container\">\n            <Link className=\"navbar-brand\" to=\"/affiliate\">\n              <p>Logo</p>\n            </Link>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <Link className=\"nav-link\" to=\"/affiliate\">Home</Link>\n                </NavItem>\n                <NavItem>\n                  <Link className=\"nav-link\" to=\"/affiliate/about-us\">About us</Link>\n                </NavItem>\n                <NavItem>\n                  <Link className=\"nav-link\" to=\"/affiliate/information\">Information</Link>\n                </NavItem>\n                <NavItem>\n                  <Link className=\"nav-link\" to=\"/affiliate/promotions\">Promotions</Link>\n                </NavItem>\n                <NavItem>\n                  <Link className=\"nav-link\" to=\"/affiliate/news\">News</Link>\n                </NavItem>\n                <NavItem>\n                  <Link className=\"nav-link\" to=\"/affiliate/contact\">Contacts</Link>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\nexport default MainMenu;\n\n\n\n\n\n            ","import React from \"react\";\nimport MainMenu from '../components/MainMenu.js';\n\nconst Header = (props) => {\n    \n    return (\n      <header>\n        <MainMenu/>\n      </header>\n    );\n}\n\n\nexport default Header;","import React from \"react\";\n\nconst Footer = (props) => {\n    \n    return (\n      <footer>\n        <h1>Footer</h1>\n      </footer>\n    );\n}\n\n\nexport default Footer;\n","import React from \"react\";\nimport Header from './Header.js';\nimport Footer from './Footer.js';\n\nconst MainLayout = (props) => {\n  return (\n    <div>\n      <Header/>\n      <main id=\"content\">\n        {props.children}\n      </main>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default MainLayout;","import React from 'react';\nimport MainLayout from '../layout/MainLayout.js';\n\n\n\n\nclass HomePage extends React.Component {\n\n  render() {\n\t\treturn (\n\t\t\t<MainLayout>\n\t\t\t\t<h1>Home Page</h1>\n\t\t\t</MainLayout>\n\t  );\n  };\n    \n}\n\nexport default HomePage;\n\n","import React from 'react';\nimport MainLayout from '../layout/MainLayout.js';\n\n\n\n\nclass AboutPage extends React.Component {\n\n  render() {\n\t\treturn (\n\t\t\t<MainLayout>\n\t\t\t\t<h1>About Page</h1>\n\t\t\t</MainLayout>\n\t  );\n  };\n    \n}\n\nexport default AboutPage;\n\n","import React from 'react';\nimport MainLayout from '../layout/MainLayout.js';\n\n\n\n\nclass InfoPage extends React.Component {\n\n  render() {\n\t\treturn (\n\t\t\t<MainLayout>\n\t\t\t\t<h1>Information Page</h1>\n\t\t\t</MainLayout>\n\t  );\n  };\n    \n}\n\nexport default InfoPage;\n\n","import React from 'react';\nimport MainLayout from '../layout/MainLayout.js';\n\n\n\n\nclass PromoPage extends React.Component {\n\n  render() {\n\t\treturn (\n\t\t\t<MainLayout>\n\t\t\t\t<h1>Promotions Page</h1>\n\t\t\t</MainLayout>\n\t  );\n  };\n    \n}\n\nexport default PromoPage;\n\n","import React from 'react';\nimport MainLayout from '../layout/MainLayout.js';\n\n\n\n\nclass NewsPage extends React.Component {\n\n  render() {\n\t\treturn (\n\t\t\t<MainLayout>\n\t\t\t\t<h1>News Page</h1>\n\t\t\t</MainLayout>\n\t  );\n  };\n    \n}\n\nexport default NewsPage;\n\n","import React from 'react';\nimport MainLayout from '../layout/MainLayout.js';\n\n\n\n\nclass ContactPage extends React.Component {\n\n  render() {\n\t\treturn (\n\t\t\t<MainLayout>\n\t\t\t\t<h1>Contact Page</h1>\n\t\t\t</MainLayout>\n\t  );\n  };\n    \n}\n\nexport default ContactPage;\n\n","import React from \"react\";\n\n\nconst AdminLayout = (props) => {\n  return (\n    <div>\n      <main id=\"content\">\n        {props.children}\n      </main>\n    </div>\n  );\n}\n\nexport default AdminLayout;","import React from \"react\";\nimport AdminLayout from '../layout/AdminLayout.js';\n\n\nclass AdminPage extends React.Component {\n\n  render() {\n\t\treturn (\n\t\t\t<AdminLayout>\n\t\t\t\t<h1>Admin Page</h1>\n\t\t\t</AdminLayout>\n\t  );\n  };\n    \n}\n\n\nexport default AdminPage;","import React from \"react\";\nimport MainLayout from '../layout/MainLayout.js';\n\nconst ErrorPage = (props) => {\n    \n    return (\n      <MainLayout>\n\t\t\t\t<h1>Error Page</h1>\n\t\t\t</MainLayout>\n    );\n}\n\n\nexport default ErrorPage;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport HomePage from './pages/HomePage.js';\nimport AboutPage from './pages/AboutPage.js';\nimport InfoPage from './pages/InfoPage.js';\nimport PromoPage from './pages/PromoPage.js';\nimport NewsPage from './pages/NewsPage.js';\nimport ContactPage from './pages/ContactPage.js';\nimport AdminPage from './pages/AdminPage.js';\nimport ErrorPage from './pages/ErrorPage.js';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/affiliate\" component={HomePage} />\n          <Route path=\"/affiliate/about-us/\" component={AboutPage} />\n          <Route path=\"/affiliate/information/\" component={InfoPage} />\n          <Route path=\"/affiliate/promotions/\" component={PromoPage} />\n          <Route path=\"/affiliate/news/\" component={NewsPage} />\n          <Route path=\"/affiliate/contact/\" component={ContactPage} />\n          <Route path=\"/affiliate/admin/\" component={AdminPage} />\n          <Route component={ErrorPage} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}